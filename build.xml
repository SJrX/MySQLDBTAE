<?xml version="1.0"?>
<project name="mysqldbtae" default="compile">
	<property name="private.buildfile" value="build-resources/private/user-antbuild.properties"/>
		<property file="${private.buildfile}"/>
		<property file="build-resources/antbuild.properties"/>
		

	<property name="version.file" value="mysqldbtae-version.txt"/>
	<property name="version.file.dev" value="version/${version.file}"/>
		
	

	
	<target name="get-git-branch"> 
			<exec executable="git" outputproperty="git.branch">
				<arg value="rev-parse"/>
				<arg value="--abbrev-ref"/>
				<arg value="HEAD"/>
			</exec>
			<echo>${git.branch}</echo>
			<property name="deploy.dir" value="${software.dir}/mysqldbtae-${git.branch}/"/>
	</target>
		
	
				
	<target name="init" depends="get-git-branch"> 
		<mkdir dir="build/classes/"/>
		<mkdir dir="dist"/>
		
		<path id="compile.classpath">
					<fileset dir="lib" id="lib">
						<include name="*.jar"/>
					</fileset>
					<fileset dir="${software.dir}/fastrf/" id="fastrf">
						<include name="fastrf.jar"/>
					</fileset>
					<fileset dir="${software.dir}/aclib-${git.branch}/" id="aclib">
						<include name="*.jar"/>
					</fileset>
		</path>	
			
	</target>
	
	<target name="clean">
		<delete dir="build"/>
		<delete dir="dist"/>
	</target>
	<target name="compile" depends="init">
		<javac srcdir="src" destdir="build/classes" debug="true" target="1.6">
		<classpath refid="compile.classpath"/>
		</javac>
		<copy todir="build/classes">
			<fileset dir="src/">
				<include name="tables.sql"/>
			</fileset>
		</copy>
	</target>
	<target name="archive" depends="compile">
		<buildnumber file="${buildnumberpath}/buildnumber-${ant.project.name}"/>
		<property name="version.string" value="v${version.major}.${version.minor}.${version.revision}${version.beta}-${git.branch}-${build.number}"/>
		<property name="version.devstring" value="v${version.major}.${version.minor}.${version.revision}dev-${git.branch}-${build.number}"/>
		<echo file="${version.file.dev}">${version.devstring}</echo>
		<echo file="build/classes/${version.file}">${version.string}</echo>
		<property name="outputfilename" value="${ant.project.name}-${version.string}"/>
		<!--<jar destfile="dist/mysqldbtae.jar" basedir="build/classes"/>-->
		<!--<buildnumber file="/ubc/cs/project/arrow/seramage/software/build-numbers/buildnumber-${ant.project.name}"/>-->
		<!-- <echo file="build/classes/${version.file}">vDEV-${build.number}</echo> -->
		<jar destfile="dist/${ant.project.name}.jar" basedir="build/classes"/>
				
		<jar destfile="dist/${ant.project.name}-src.jar">
			<fileset dir="src/">
				 <include name="**/*.java"/>
			</fileset>
		</jar>
				
		
		<copy todir="dist/">
					<fileset refid="lib"/>
					<fileset refid="fastrf"/>
					<fileset refid="aclib"/>
					<fileset dir="scripts">
						<include name="*"/>
					</fileset>	
		</copy>
		
		
	</target>			
	<target name="zip" depends="archive" description="Makes tarball for this release">
			
			<tar destFile="${software.dir}/${outputfilename}.tar.gz" longfile="gnu" compression="gzip">
					<tarfileset dir="dist/" filemode="750" prefix="${outputfilename}/">
											<include name="mysql-worker"/>
						</tarfileset>
				<tarfileset dir="dist/" filemode="640" dirmode="750" prefix="${outputfilename}/">
							<include name="**/*"/>
							<exclude name="${lastdeployfile}"/> 
							<exclude name="mysql-worker"/>
						</tarfileset>
						
			</tar>
		</target>
	
	<target name="deploy-release" depends="zip" description="untars tarball in software.dir and creates symlink">
		
			<exec executable="tar" dir="${software.dir}" failonerror="true">
				<arg value="-xzf"/>
				<arg value="${software.dir}/${outputfilename}.tar.gz"/>
			</exec>
			
			<!--<echo file="${lastdeployfile}" append="false">${software.dir}/${outputfilename}</echo>-->
				
			<symlink link="${deploy.dir}-${git.branch}" overwrite="true" resource="${software.dir}/${ant.project.name}-${version.string}" failonerror="false"/>
			<echo>Untar Successful to ${software.dir}/${outputfilename}</echo>
		</target>
		<target name="deploy" depends="zip, deploy-release"/>
		
	
</project>
