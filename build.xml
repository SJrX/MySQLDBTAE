<?xml version="1.0"?>
<project name="mysqldbtae" default="compile">
	<property name="private.buildfile" value="build-resources/private/user-antbuild.properties"/>
		<property file="${private.buildfile}"/>
		<property file="build-resources/antbuild.properties"/>
		

	<property name="version.file" value="${ant.project.name}-version.txt"/>
	<property name="version.file.dev" value="version/${version.file}"/>
		
	

	
	<target name="git-status-init" description="Initialize Git variables">
	
					<exec executable="git" outputproperty="git.branch">
						<arg value="rev-parse"/>
						<arg value="--abbrev-ref"/>
						<arg value="HEAD"/>
					</exec>
					
					<exec executable="git" outputproperty="git.commit">
								<arg value="rev-parse"/>
								<arg value="HEAD"/>
					</exec>
		
					<exec executable="git" outputproperty="git.shortcommit">
										<arg value="rev-parse"/>
										<arg value="--short=12"/>
										<arg value="HEAD"/>
							</exec>
				
					<exec executable="git" resultproperty="git.dirty" output="/dev/null">
								<arg value="diff"/>
								<arg value="--exit-code"/>
					</exec>
					<echo>Git properties loaded, branch: ${git.branch}
commit: ${git.commit}
shortcommit: ${git.shortcommit}
dirty: ${git.dirty}</echo>
	</target>
	
				
	<target name="init" depends="git-status-init"> 
		<mkdir dir="build/classes/"/>
		<mkdir dir="dist"/>
		
		<path id="compile.classpath">
					<fileset dir="lib" id="lib">
						<include name="*.jar"/>
					</fileset>
					<fileset dir="${software.dir}/aclib-${git.branch}/" id="aclib">
						<include name="*.jar"/>
					</fileset>
		</path>	
			
	</target>
	
	<target name="clean">
		<delete dir="build"/>
		<delete dir="dist"/>
	</target>
	<target name="compile" depends="init">
		<javac srcdir="src" destdir="build/classes" debug="true" target="1.6">
		<classpath refid="compile.classpath"/>
		</javac>
		<copy todir="build/classes">
			<fileset dir="src/">
				<include name="tables.sql"/>
			</fileset>
		</copy>
	</target>
	
	<target name="archive" depends="compile">
		<buildnumber file="${buildnumberpath}/buildnumber-${ant.project.name}"/>
		<property name="version.string" value="v${version.major}.${version.minor}.${version.revision}${version.beta}-${git.branch}-${build.number}"/>
		<property name="version.devstring" value="v${version.major}.${version.minor}.${version.revision}dev-${git.branch}-${build.number}"/>
		
		<echo file="${version.file.dev}">${version.devstring} (${git.shortcommit})</echo>
		<echo file="build/classes/${version.file}">${version.string} (${git.shortcommit})</echo>
			
		<property name="outputfilename" value="${ant.project.name}-${version.string}"/>
		<jar destfile="dist/${ant.project.name}.jar" basedir="build/classes"/>
				
		<jar destfile="dist/${ant.project.name}-src.jar">
			<fileset dir="src/">
				 <include name="**/*.java"/>
			</fileset>
		</jar>
		<copy todir="dist/">
			<fileset dir="">
						<include name="conf/**"/>
			</fileset>
					<fileset refid="lib"/>

					<fileset refid="aclib"/>
					<fileset dir="scripts">
						<include name="*"/>
					</fileset>	
		</copy>
	</target>			
	<target name="zip" depends="archive" description="Makes tarball for this release">
		
		<fail message="Cannot make a build for the git master branch if it is dirty, please commit all changes">
					<condition>
						<and>
						<equals arg1="${git.branch}" arg2="master" casesensitive="false" trim="true"/>
						<equals arg1="${git.dirty}" arg2="1" casesensitive="false" trim="true"/>
						</and>
					</condition>
				</fail>
						
		
			<tar destFile="${software.dir}/${outputfilename}.tar.gz" longfile="gnu" compression="gzip">
					<tarfileset dir="dist/" filemode="750" prefix="${outputfilename}/">
							<include name="mysql-worker"/>
							<include name="dzq"/>
						</tarfileset>
				<tarfileset dir="dist/" filemode="640" dirmode="750" prefix="${outputfilename}/">
							<include name="**/*"/>
							<exclude name="${lastdeployfile}"/> 
							<exclude name="mysql-worker"/>
							<exclude name="dzq"/>
						</tarfileset>
						
			</tar>
	</target>
	
	<target name="deploy-release" depends="zip" description="untars tarball in software.dir and creates symlink">
		
		
			<exec executable="tar" dir="${software.dir}" failonerror="true">
				<arg value="-xzf"/>
				<arg value="${software.dir}/${outputfilename}.tar.gz"/>
			</exec>
			
			<!--<echo file="${lastdeployfile}" append="false">${software.dir}/${outputfilename}</echo>-->
				
			<symlink link="${deploy.dir}-${git.branch}" overwrite="true" resource="${software.dir}/${ant.project.name}-${version.string}" failonerror="false"/>
			<echo>Untar Successful to ${software.dir}/${outputfilename}</echo>
		</target>
		<target name="deploy" depends="zip, deploy-release"/>
		
	
</project>
